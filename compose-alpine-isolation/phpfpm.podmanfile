# Use Alpine Linux as the base image
FROM alpine:latest

LABEL maintainer devwardiman <devwardiman@gmail.com>

# Update package list and upgrade existing packages
RUN apk update && apk upgrade

# Install PHP 83 and common extensions
RUN apk add --no-cache curl unzip php83 php83-cli php83-fpm \
    php83-curl php83-fileinfo php83-fileinfo \
    php83-pdo php83-pdo_mysql php83-mbstring \
    php83-tokenizer php83-xml php83-ctype \
    php83-json php83-openssl php83-phar \
    php83-zip php83-gd php83-dom \
    php83-session php83-simplexml php83-sqlite3 \
    php83-intl php83-xmlwriter php83-mysqli \
    php83-exif php83-iconv php83-pecl-imagick \
    php83-pcntl php83-xmlreader php83-pdo_sqlite \
    php83-posix php83-pecl-xdebug php83-sodium

# Install Composer globally
RUN php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" \
    && php composer-setup.php --install-dir=/usr/local/bin --filename=composer \
    && php -r "unlink('composer-setup.php');"

# Create a group and user
RUN adduser -u 1000 -S user -G www-data -g www-data

# Create directories and change ownership
RUN mkdir -p /var/www && \
    mkdir -p /var/volumes && \
    chmod -R 775 /var/www && \
    chown -R :www-data /var/www && \
    chown -R user:www-data /var/volumes && \
    chown -R user:www-data /var/log

# Tell docker that all future commands should run as the user
USER user

# Start php-fpm server
CMD /usr/sbin/php-fpm83 -F